# -*- coding: utf-8 -*-
"""
Created on Wed Oct 14 11:38:54 2020

@author: VeroGeorl


This first part of my code takes the data from a IES file of a light and plots
the 3D radiation pattern. The file is composed of spherical coordinates
that are converted to cartesian in this code.
The function get_cartesian() computes these new coordinates. The center of the
axes being located on the light.
Keep in mind that the angle theta is the elevation angle and not the 
inclination angle. The angle goes from -z to z.
"""

import matplotlib.pyplot as plt
from matplotlib import cm
from mpl_toolkits.mplot3d import Axes3D
import numpy as np


def get_cartesian(theta,phi,rho):
        #precalculate sine and cosine of phi and theta
        cos_phi = np.cos(phi);
        sin_phi = np.sin(phi);
        cos_theta = np.cos(np.pi-theta);
        sin_theta = np.sin(np.pi-theta);
        
        x = rho *sin_theta *cos_phi
        y = rho *sin_theta *sin_phi
        z = rho *(cos_theta)
        #reshape to flat (n x 1)vectors:
        x = x.flatten()
        y = y.flatten()
        z = z.flatten()
        #end by returning point coordinates
        return x,y,z
theta=np.linspace(0,180,181) * np.pi / 180.0
#theta=np.linspace(0,45,46) * np.pi / 180.0
phi=np.linspace(0,2*np.pi,13) 
Z=[1931.094,1932.181,1930.732,1934.353,1933.629,1940.871,1940.871,1945.216,1947.027,1955.717,1963.684,1970.201,1981.065,1991.565,1995.911,2009.308,2020.534,2034.656,2042.984,2053.485,2065.072,2075.211,2088.609,2095.851,2103.817,2115.767,2125.181,2134.234,2142.925,2147.632,2152.339,2159.219,2164.289,2172.255,2177.686,2183.118,2192.895,2198.326,2207.379,2213.172,2220.777,2224.398,2232.726,2238.52,2242.141,2250.831,2257.711,2264.591,2274.006,2291.387,2303.698,2319.269,2337.012,2348.961,2368.152,2389.879,2411.967,2436.228,2473.162,2511.907,2560.791,2608.227,2658.559,2697.304,2710.34,2686.079,2642.988,2598.45,2562.964,2540.876,2516.614,2493.802,2444.918,2360.91,2188.912,1922.404,1631.273,1329.642,1051.909,779.969,560.535,390.347,270.129,165.119,83.646,32.951,17.743,12.311,7.242,3.621,1.086,0.724,0,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.724,0.724,1.811,1.448,1.448,1.448,2.173,2.535,2.535,2.173,2.535,2.535,2.535,2.173,2.535,2.173,2.535,1.811,2.173,3.259,2.535,3.259,3.621,3.983,3.621,3.983,3.983,3.983,5.069,5.069,5.069,6.518,6.88,6.518,6.88,7.966,8.69,9.053,9.053,9.415,11.225,12.311,11.587,13.398,13.398,14.122,14.484,15.208,16.295,16.657,16.657,17.743,17.381,17.743,18.467,18.829,18.467,18.105,18.829,18.829,20.278,19.916,20.278,21.002,20.64,1931.094,1947.751,1958.614,1966.58,1974.547,1982.151,1992.652,2003.515,2014.378,2025.603,2037.552,2047.329,2057.106,2070.142,2081.729,2093.316,2103.093,2119.388,2133.51,2150.167,2163.926,2180.221,2197.24,2213.897,2228.381,2243.951,2262.418,2276.903,2293.559,2310.578,2319.631,2335.925,2343.167,2356.565,2367.066,2376.843,2389.516,2399.293,2410.156,2425.003,2433.693,2446.367,2457.23,2464.11,2472.076,2473.886,2479.318,2476.059,2481.853,2489.095,2498.509,2495.613,2495.613,2491.629,2491.629,2488.008,2474.611,2463.023,2450.35,2424.278,2396.759,2358.738,2304.06,2234.174,2153.788,2064.71,1971.288,1849.983,1715.281,1578.768,1437.91,1276.05,1088.481,845.51,630.059,467.837,320.823,226.676,160.049,112.976,82.197,57.936,43.09,29.692,20.278,11.587,4.707,2.173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.086,0,1.086,0,1.086,1.448,2.173,2.535,2.535,2.535,4.345,4.345,4.707,6.156,5.432,7.242,8.328,7.966,9.053,10.501,10.501,11.587,13.036,14.122,14.122,14.846,15.57,15.57,16.295,18.105,17.381,18.105,17.743,17.743,18.467,18.467,18.467,19.554,19.191,19.916,19.916,21.002,1931.094,1949.561,1964.408,1974.185,1984.323,1996.273,2007.136,2017.275,2027.414,2036.466,2043.346,2049.14,2057.83,2069.056,2075.935,2081.005,2089.333,2098.386,2103.817,2111.784,2118.664,2122.285,2124.457,2124.095,2132.786,2133.872,2135.682,2138.217,2139.303,2136.407,2129.527,2122.647,2115.767,2107.438,2092.592,2077.022,2060.003,2036.466,2011.119,1979.254,1939.061,1900.678,1856.139,1802.91,1748.957,1685.951,1614.979,1542.558,1456.74,1366.214,1261.204,1128.312,976.953,859.632,781.056,724.568,672.787,620.282,575.381,533.377,491.736,452.266,414.246,378.76,341.101,281.354,248.04,221.245,195.898,170.913,145.203,120.218,95.233,75.317,59.023,45.625,35.124,28.244,21.364,14.122,8.69,5.069,2.535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.724,1.086,1.811,2.173,2.897,3.259,3.621,5.069,6.156,6.88,7.604,9.053,9.777,10.501,11.587,11.225,12.674,13.76,13.76,15.208,15.933,16.295,16.657,16.657,17.743,17.743,18.829,18.467,19.191,18.829,19.554,19.554,19.916,19.554,20.278,1931.094,1951.01,1962.959,1975.633,1989.393,1996.635,2009.308,2017.637,2024.879,2033.932,2039.725,2046.243,2049.14,2053.847,2061.451,2064.71,2066.883,2067.245,2068.693,2061.451,2062.538,2060.003,2058.554,2057.468,2061.451,2063.262,2049.14,2025.603,1998.808,1962.235,1937.612,1905.385,1870.261,1842.017,1801.461,1759.095,1714.195,1662.414,1603.753,1546.541,1479.19,1410.028,1335.073,1240.202,1139.175,1026.561,936.76,871.944,816.542,772.003,731.81,689.444,650.337,609.419,574.657,541.706,507.306,475.803,446.473,417.142,363.189,312.495,286.061,261.438,237.177,211.83,189.018,166.567,141.582,115.873,93.06,73.145,51.056,39.831,29.33,22.812,16.657,10.139,6.156,3.259,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0,1.086,1.448,2.173,3.983,3.259,4.707,5.069,5.794,5.794,7.966,8.328,9.777,10.863,11.225,12.311,12.674,13.398,14.484,14.846,16.295,15.933,16.657,16.657,18.105,18.105,18.105,18.105,20.278,19.191,19.554,19.916,20.64,19.554,19.916,1931.094,1941.957,1954.993,1964.77,1977.443,1986.496,1996.997,2006.412,2016.913,2026.689,2037.915,2046.605,2056.382,2063.262,2070.504,2079.194,2085.712,2093.678,2098.386,2102.007,2109.611,2111.059,2118.301,2118.664,2128.078,2126.63,2128.44,2128.078,2129.165,2124.457,2119.026,2112.146,2102.731,2087.161,2070.866,2052.761,2032.121,2003.515,1974.909,1940.147,1904.299,1865.554,1819.567,1764.889,1704.056,1637.429,1565.008,1477.742,1386.492,1270.619,1143.521,997.231,849.855,769.468,710.446,655.044,604.712,559.449,514.91,472.182,433.075,392.519,357.758,305.977,258.541,229.573,203.864,177.792,152.807,126.736,101.027,80.025,63.73,51.056,39.107,30.779,24.623,17.381,10.863,7.604,3.983,1.448,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.724,1.086,1.086,1.811,2.173,2.535,3.259,3.621,5.432,4.345,5.794,6.518,7.604,9.053,9.777,10.863,11.587,12.674,13.76,13.76,14.484,15.208,15.933,16.295,16.295,17.381,17.381,18.467,18.829,18.829,19.554,18.829,19.916,19.916,20.278,19.554,20.278,19.916,1931.094,1921.318,1930.732,1939.785,1952.096,1960.063,1968.029,1980.702,1985.772,2001.342,2011.119,2025.241,2031.759,2045.519,2060.003,2074.125,2088.609,2099.834,2112.508,2126.268,2140.39,2150.529,2165.737,2177.686,2196.154,2208.827,2223.673,2233.812,2249.021,2259.884,2272.919,2286.317,2297.905,2310.94,2323.976,2334.839,2343.892,2359.1,2371.411,2379.016,2388.068,2394.586,2397.121,2401.104,2401.828,2398.569,2396.034,2395.31,2397.483,2396.034,2394.224,2389.516,2383.723,2372.136,2359.824,2342.081,2322.165,2293.559,2254.09,2202.309,2134.234,2058.192,1972.736,1880.038,1754.75,1626.928,1484.259,1339.056,1175.748,983.109,779.245,544.965,394.692,265.783,184.672,128.184,88.353,63.73,45.987,34.4,23.899,16.295,10.139,5.794,2.173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.724,0,1.448,1.811,1.811,2.535,2.173,2.897,3.259,3.259,3.983,3.983,4.707,4.707,5.794,6.156,6.156,6.88,7.966,7.966,9.053,9.777,10.863,11.949,12.674,12.311,13.76,14.484,15.208,15.933,16.295,16.295,17.381,18.105,18.105,19.191,19.191,19.554,19.916,19.191,19.916,19.916,20.64,20.64,20.278,21.364,21.364,1931.094,1936.164,1935.439,1936.526,1936.888,1937.25,1937.974,1942.319,1944.492,1948.113,1955.355,1964.77,1970.563,1979.254,1987.944,1996.635,2008.584,2020.172,2032.121,2041.174,2049.14,2060.003,2069.78,2077.746,2087.161,2095.851,2107.438,2113.232,2119.75,2127.354,2128.803,2137.493,2141.476,2148.356,2154.874,2162.84,2175.514,2183.118,2190.722,2199.412,2199.05,2200.499,2203.034,2206.292,2219.69,2234.174,2244.313,2247.934,2255.176,2263.505,2271.471,2280.886,2289.938,2307.681,2322.165,2346.426,2365.256,2394.586,2430.434,2460.489,2509.735,2554.635,2599.174,2622.349,2614.02,2581.793,2549.204,2525.305,2502.855,2485.112,2470.99,2431.883,2373.584,2242.865,1999.532,1703.694,1409.666,1120.346,857.097,601.815,422.574,292.941,195.536,110.441,47.435,23.537,17.019,11.587,9.053,5.069,4.707,3.621,2.897,3.259,1.448,2.173,1.811,1.811,1.448,1.811,1.086,0.724,1.448,0.362,1.086,0,0.362,0.362,0,0.362,0.724,0.362,0.362,0.724,1.086,1.086,1.448,0.724,1.086,2.173,1.811,1.811,2.173,2.173,2.535,2.173,2.173,2.173,2.173,1.811,1.448,1.448,1.811,1.811,1.448,2.535,0.724,2.173,1.811,1.811,2.897,3.259,2.897,3.259,3.621,4.345,4.707,4.707,5.069,5.432,6.518,6.156,6.518,7.966,7.604,9.415,7.966,9.777,9.415,11.587,11.225,11.587,12.674,12.674,13.398,13.76,15.57,15.933,16.657,16.295,17.019,18.105,18.467,19.191,20.278,19.916,19.554,20.278,19.916,21.002,20.64,1931.094,1931.456,1924.576,1912.265,1905.385,1896.695,1891.263,1882.21,1877.503,1870.623,1864.83,1859.398,1852.518,1847.086,1837.672,1832.24,1826.809,1821.015,1814.859,1809.428,1802.91,1797.116,1790.598,1786.253,1782.27,1774.304,1767.062,1759.458,1751.491,1741.352,1733.748,1720.713,1708.401,1697.176,1684.502,1672.915,1657.345,1637.791,1623.307,1609.547,1594.339,1576.234,1562.836,1547.627,1524.815,1502.365,1477.742,1454.205,1424.875,1399.889,1369.111,1333.625,1302.484,1267.722,1226.804,1184.438,1139.175,1086.308,1033.441,977.678,917.569,853.838,782.866,705.376,630.783,562.708,502.599,445.749,403.02,365,332.41,302.356,272.301,239.712,206.761,177.792,139.772,115.149,97.044,79.663,59.747,43.452,31.503,21.364,14.484,10.501,6.156,3.259,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0,0,0.362,0,0.724,0.724,0.724,0.724,1.448,0.724,1.086,1.086,1.448,0.724,1.086,1.811,1.448,1.448,1.811,1.811,1.811,2.173,3.259,3.259,3.259,3.621,3.621,4.707,4.707,4.345,5.069,5.432,5.794,6.156,6.518,7.242,8.328,7.604,8.69,9.053,9.415,9.777,10.501,9.777,11.587,11.949,13.036,13.036,14.846,14.484,15.57,15.208,16.295,17.381,18.105,18.105,18.829,19.554,20.278,19.916,19.916,21.002,20.64,21.002,21.002,21.002,1931.094,1920.955,1907.92,1894.522,1878.227,1860.484,1845.276,1826.809,1807.255,1790.598,1769.959,1749.319,1728.317,1706.228,1682.692,1658.431,1634.894,1606.288,1582.027,1555.956,1525.177,1495.485,1465.43,1432.479,1396.631,1359.696,1323.124,1286.189,1244.547,1203.63,1162.712,1117.449,1073.997,1026.924,978.764,927.707,880.272,837.544,800.971,766.572,737.603,712.98,691.616,673.511,653.958,638.025,622.817,608.695,592.038,577.554,565.242,550.396,536.274,524.325,510.927,494.632,480.148,464.578,451.18,434.523,420.401,403.383,389.623,374.776,358.482,336.031,305.977,288.596,271.939,255.645,238.988,222.331,203.864,185.759,162.584,141.22,98.492,75.317,49.97,34.038,19.191,8.328,2.173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.724,1.086,1.086,1.448,2.173,1.811,2.897,3.621,3.621,4.345,5.432,5.794,5.794,6.88,7.604,8.328,8.328,8.69,9.777,10.863,10.863,11.587,12.674,13.76,13.398,14.484,14.846,15.57,15.57,17.743,17.743,18.105,18.467,18.829,19.191,20.278,19.191,20.278,20.278,19.916,19.554,20.64,20.278,1931.094,1918.059,1902.488,1882.572,1862.657,1844.552,1822.101,1801.461,1778.287,1752.578,1727.23,1702.245,1676.174,1645.395,1614.616,1582.027,1551.248,1517.935,1480.276,1444.428,1406.045,1360.782,1317.33,1274.24,1226.804,1179.007,1131.933,1085.222,1035.252,983.833,934.949,886.428,840.079,802.42,770.193,743.035,717.688,696.324,678.219,662.286,646.354,633.318,622.455,611.23,600.729,593.487,585.52,576.468,567.777,555.104,543.878,533.74,522.876,511.289,500.426,488.477,476.889,465.664,453.353,441.403,429.816,416.056,399.399,368.983,351.24,338.928,323.72,308.149,295.114,280.63,265.783,249.851,235.005,213.641,188.293,120.942,97.044,43.814,23.537,2.897,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.362,2.535,2.897,3.259,3.621,4.707,5.069,5.432,6.156,6.88,7.242,8.328,8.69,9.415,10.501,10.501,11.949,11.587,12.311,12.674,13.398,14.846,14.846,14.846,16.657,17.019,18.105,18.105,18.467,19.191,19.191,19.916,19.916,19.916,19.916,21.002,19.916,19.916,1931.094,1912.989,1898.505,1880.038,1866.278,1848.535,1831.516,1813.773,1796.754,1774.666,1753.302,1738.456,1714.195,1692.106,1668.932,1647.206,1621.496,1596.511,1568.629,1543.644,1515.4,1489.691,1461.809,1430.668,1395.906,1361.144,1324.21,1286.913,1248.53,1208.699,1169.23,1125.053,1081.239,1037.062,992.162,944.726,899.101,857.459,819.801,783.228,754.26,729.637,705.738,683.65,666.993,650.337,632.232,617.385,605.074,591.314,577.916,563.432,550.396,535.912,525.049,511.651,496.443,481.959,468.199,452.266,439.231,424.022,408.452,394.33,380.57,365.362,350.516,320.461,297.649,282.44,266.146,249.851,233.194,216.175,197.346,178.879,153.169,133.978,89.801,67.713,40.918,25.709,14.484,6.88,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,1.086,0.362,1.448,1.086,1.811,2.897,3.621,3.621,4.707,5.069,5.794,5.794,6.88,7.242,8.328,8.69,9.415,9.777,10.863,11.587,11.587,13.398,13.398,13.398,14.122,14.846,15.208,16.295,16.295,17.743,18.467,18.467,19.554,19.554,19.191,19.916,20.278,19.916,20.64,19.916,19.916,1931.094,1903.212,1895.608,1887.28,1878.589,1872.796,1864.105,1859.036,1851.794,1848.535,1842.741,1836.585,1832.964,1825.722,1818.118,1813.411,1807.617,1803.634,1798.927,1794.944,1788.426,1783.719,1776.839,1776.114,1772.855,1769.959,1764.527,1755.112,1754.026,1747.146,1742.077,1735.921,1729.041,1722.885,1712.384,1701.883,1689.934,1679.433,1663.138,1651.913,1636.705,1620.41,1604.84,1588.545,1570.802,1554.507,1538.213,1518.659,1499.468,1476.293,1449.497,1423.426,1395.906,1366.214,1331.09,1298.501,1261.566,1221.735,1182.628,1136.279,1084.498,1033.441,978.402,919.017,855.649,781.056,709.722,636.577,569.588,509.479,450.818,405.917,369.345,338.204,306.701,275.56,241.885,208.933,179.603,141.944,116.235,98.492,81.473,59.023,42.366,29.33,20.64,14.122,8.69,4.707,1.448,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.362,1.086,0.362,2.173,2.173,2.535,3.259,2.897,3.621,3.983,3.983,4.707,5.069,5.794,5.794,6.518,6.518,7.604,7.966,7.966,8.69,9.777,9.777,10.139,10.863,11.949,11.949,13.398,13.76,14.122,14.846,15.933,16.295,16.657,17.019,18.105,18.467,19.191,19.554,19.191,19.554,19.916,19.916,21.002,20.64,21.364,1931.094,1932.181,1930.732,1934.353,1933.629,1940.871,1940.871,1945.216,1947.027,1955.717,1963.684,1970.201,1981.065,1991.565,1995.911,2009.308,2020.534,2034.656,2042.984,2053.485,2065.072,2075.211,2088.609,2095.851,2103.817,2115.767,2125.181,2134.234,2142.925,2147.632,2152.339,2159.219,2164.289,2172.255,2177.686,2183.118,2192.895,2198.326,2207.379,2213.172,2220.777,2224.398,2232.726,2238.52,2242.141,2250.831,2257.711,2264.591,2274.006,2291.387,2303.698,2319.269,2337.012,2348.961,2368.152,2389.879,2411.967,2436.228,2473.162,2511.907,2560.791,2608.227,2658.559,2697.304,2710.34,2686.079,2642.988,2598.45,2562.964,2540.876,2516.614,2493.802,2444.918,2360.91,2188.912,1922.404,1631.273,1329.642,1051.909,779.969,560.535,390.347,270.129,165.119,83.646,32.951,17.743,12.311,7.242,3.621,1.086,0.724,0,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.724,0.724,1.811,1.448,1.448,1.448,2.173,2.535,2.535,2.173,2.535,2.535,2.535,2.173,2.535,2.173,2.535,1.811,2.173,3.259,2.535,3.259,3.621,3.983,3.621,3.983,3.983,3.983,5.069,5.069,5.069,6.518,6.88,6.518,6.88,7.966,8.69,9.053,9.053,9.415,11.225,12.311,11.587,13.398,13.398,14.122,14.484,15.208,16.295,16.657,16.657,17.743,17.381,17.743,18.467,18.829,18.467,18.105,18.829,18.829,20.278,19.916,20.278,21.002,20.64]
Z1=np.asarray(Z)  #/1602453.778

rho=Z1.reshape(13,181)
rho_90 = rho[:, 0:45]
coord=[]
for i in range(phi.size-1):
    for j in range(theta.size-1):
        #print(rho[i][j])
        x,y,z=get_cartesian(theta[j],phi[i],rho[i][j])
        coord.append([x,y,z])
A=np.asarray(coord)
B=A.transpose()
x_vec=B[0][0]
y_vec=B[0][1]
z_vec=B[0][2]
X,Y = np.meshgrid(x_vec,y_vec)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')


pattern = ax.scatter(x_vec,y_vec, np.abs(z_vec),c=z_vec, linewidth=0, antialiased=False)
#ax.plot([0,0], [0,0],zs=[0,np.max(z_vec)])

fig.colorbar(pattern,orientation="vertical")
plt.title('3-D representation of the IES file in Python')
plt.show()


#%%
"""
This part of the code will compute the position of the receiver with respect
to the emitter in spherical coordinates. 
The center of the axes is located on the light.

"""
efficacite_lum=122 #lum/sr
Area_rx=1.30e-05 #m²

def get_spherical(x,y,z):
    rho=np.sqrt(x**2+y**2+z**2)
    phi=np.arctan2(y,x)
    if phi<0:
        phi=phi+2*np.pi
    #the minus on the z is to have the same reference angle as the IES file
    theta=np.arccos(z/np.sqrt(x**2+y**2+z**2))
    return rho,phi*180/np.pi,180-theta*180/np.pi

TX_pos=np.array([0,0,0])
RX_pos=np.array([1,1,-1])

RX_pos_spher=get_spherical(RX_pos[0],RX_pos[1],RX_pos[2])
print(RX_pos_spher)

for_theta=int(round(RX_pos_spher[2]))
for_phi=int(round(RX_pos_spher[1]/30))
Puissance_lu=rho[for_phi][for_theta]
print(Puissance_lu)
Puissance_W_sr=Puissance_lu/efficacite_lum
print(Puissance_W_sr)

P_rx_W=Puissance_W_sr*Area_rx/(RX_pos_spher[0]**2)
print(P_rx_W)
P_rx_dBm=10*np.log10(P_rx_W/0.001)
print(P_rx_dBm)


#%%
"""
This part will build a plane in 3D within the space defined above to assess
the power reaching the receiver when it is located at 1.5 m above the ground.
An interpolation function is used to smooth the data on the phi angle 
"""
def get_spherical(x,y,z):
    rho=np.sqrt(x**2+y**2+z**2)
    phi=np.arctan2(y,x)
    if phi<0:
        phi=phi+2*np.pi
    #the minus on the z is to have the same reference angle as the IES file
    theta=np.arccos(z/np.sqrt(x**2+y**2+z**2))
    return rho,phi*180/np.pi,180-(theta*180/np.pi)

#This function returns the power per solid angle from the table of 
#the radiation pattern
def get_W_per_sr(RX_pos):
    RX_pos_spher=get_spherical(RX_pos[0],RX_pos[1],RX_pos[2])
    for_theta=int(round(RX_pos_spher[2]))
    Puissance_lu=np.interp((RX_pos_spher[1])/30.,phi[:-1]*180/np.pi,Rho_[:,for_theta])
    Puissance_W_sr=Puissance_lu/efficacite_lum
    return Puissance_W_sr

efficacite_lum=122 #lum/sr
Area_rx=1.30e-05 #m²
TX_pos=np.array([0,0,0])
RX_pos=np.array([1,1,-1])
n=1.5
FOV=60
FOV_rad=FOV*np.pi/180
g=np.square(n)/np.square(np.sin(FOV_rad))#gain 

z_pos=-4.5

H=(len(x),len(y))
Rho_=np.delete(rho, -1, 0)
#h=np.zeros(H)
h=[]
h_dBm=[]

lx=6
ly=6
lz=6 # m hauteur de la lampe
Nx=15
Ny=15
Nz=25 #nombre de case à évaluer sur mon mur
x=np.linspace(-lx/2,lx/2,Nx)
y=np.linspace(-ly/12,ly*(11/12),Ny)
z=np.linspace(-lz/2,lz/2,Nz)
for i in x:
    for j in y:
        RX_pos=np.array([i, j, z_pos])
        
        
        RX_pos_spher=get_spherical(RX_pos[0],RX_pos[1],RX_pos[2])
        #here=180-RX_pos_spher[2]
        
        if(RX_pos_spher[2]<=FOV):
            #for_phi2=int(round(RX_pos_spher[1])/30.)
            #for_theta=int(round(RX_pos_spher[2]))
            #Puissance_lu=np.interp((RX_pos_spher[1])/30.,phi[:-1]*180/np.pi,Rho_[:,for_theta])
            #print( 'phi  '+str(for_phi)+ 'theta  ' + str(for_theta))
            #Puissance_lu1=rho[for_phi][for_theta]
            #Puissance_W_sr=Puissance_lu/efficacite_lum
            
            Puissance_W_sr=get_W_per_sr(RX_pos)
            P_rx_W=Puissance_W_sr*Area_rx/(RX_pos_spher[0]**2)
            P_rx_W_g=P_rx_W*g
            h.append(P_rx_W_g)
            P_rx_dBm=10*np.log10(P_rx_W_g/0.001)
            h_dBm.append(P_rx_dBm)
            #TEST00=H[ii, jj]
            #TEST01=((m+1)*Adet*(cosphi**(m)))/(2*np.pi*np.square(D1))

        else:
            h.append(0)
            h_dBm.append(np.log10(0/0.001))

       
X,Y=np.meshgrid(x,y)
#Power in Watts
h_array=np.asarray(h)  
h_matrix=h_array.reshape(len(x),len(y))
#Power in dBm
h_array_dBm=np.asarray(h_dBm)   
h_matrix_dBm=h_array_dBm.reshape(len(x),len(y))


ax = fig.add_subplot(111, projection='3d')
plt.figure(figsize=(16,6))
plt.subplot(1,2,1,projection='3d')
ax=plt.gca(projection='3d')
ax.plot_surface(X,Y, h_matrix_dBm, cmap='jet')
plt.title('Power reaching the receiver plane in dBm') 
plt.xlabel('x (m)')
plt.ylabel('y (m)')
plt.subplot(1,2,2)
vec=np.linspace(np.min(h_matrix_dBm), np.max(h_matrix_dBm),10)
cont=plt.contour(X, Y, h_matrix_dBm,vec,cmap='jet')
plt.clabel(cont)
plt.xlabel('x (m)')
plt.ylabel('y (m)')
plt.title('Level curves dBm') 
#plt.axis('equal')
plt.show()

#%% 
"""
This part of the code will compute the impulse response of the system when a 
streetlight is used as an emitter. The parameters needed are the channel 
attenuation levels 
"""

#%%
"""
This part of the code takes into account the specular reflection of the light
on a wall. The part of the reflection is taken from my previous code with the
lambertian emitter.
"""
lx=6
ly=6
lz=6 # m hauteur de la lampe
Nx=15
Ny=15
Nz=15 #nombre de case à évaluer sur mon mur
x=np.linspace(-lx/2,lx/2,Nx)
y=np.linspace(-ly/12,ly*(11/12),Ny)
z=np.linspace(-lz/2,lz/2,Nz)


H=(Nx, Ny)
H2=np.zeros(H)

TP1=TX_pos
rho=0.349
dA=lz*ly/(Nz*Ny)

for ii in range(int(Nx)):
        
        for jj in range (int(Ny)):
        
            RP = np.array([x[ii], y[jj], z_pos])#position de Rx
            for kk in range (int(Nx)):
                
                for ll in range (int(Nz)):
                    
                    WP2=np.array([x[kk], -(len(y))/2, z[ll]]) #point de l'incidence
                    Puissance_W_sr_inc=get_W_per_sr(WP2)
                    D1=np.sqrt(np.vdot(TP1-WP2, TP1-WP2))
                    
                # distance entre Tx et point d'incidence
                    cos_phi=(np.abs(WP2[2]-TP1[2]))/D1
                    cos_alpha=(np.abs(TP1[1]-WP2[1]))/D1
                
                    D2=np.sqrt(np.vdot(WP2-RP, WP2-RP))
                #distance entre le point d'incidence et Rx
                    cos_psy=(np.abs(WP2[2]-RP[2]))/D2
                    cos_beta=(np.abs(WP2[1]-RP[1]))/D2
                    #print(Puissance_W_sr_inc)
                    if np.abs(np.arccos(cos_psy))<=FOV:
                        TEST20= H2[ii, jj]
                        TEST21= (Puissance_W_sr_inc*dA*Area_rx*rho*cos_beta*cos_psy)/(np.square(D1)*np.square(D2))
                        #print(TEST21)
                        H2[ii, jj]= TEST20 + TEST21
                        

 
h_matrix_total=h_matrix+H2   
h_refl_only=H2
ax = fig.add_subplot(111, projection='3d')
plt.figure(figsize=(16,6))
plt.subplot(1,2,1,projection='3d')
ax=plt.gca(projection='3d')
ax.plot_surface(X,Y, h_refl_only, cmap='jet')
plt.title('Power reaching the receiver plane in dBm') 
plt.xlabel('x (m)')
plt.ylabel('y (m)')
plt.subplot(1,2,2)
vec=np.linspace(np.min(h_refl_only), np.max(h_refl_only),10)
cont=plt.contour(X, Y, h_refl_only,vec,cmap='jet')
plt.clabel(cont)
plt.xlabel('x (m)')
plt.ylabel('y (m)')
plt.title('Level curves dBm') 
#plt.axis('equal')
plt.show()
                  
                        
#%%

"""
This part will build a plane in 3D within the space defined above to assess
the power reaching the receiver when it is located at 1.5 m above the ground.
WITHOUT INTERPOLATIOOOOOOOON
"""

def get_spherical(x,y,z):
    rho=np.sqrt(x**2+y**2+z**2)
    phi=np.arctan2(y,x)
    if phi<0:
        phi=phi+2*np.pi
    #the minus on the z is to have the same reference angle as the IES file
    theta=np.arccos(z/np.sqrt(x**2+y**2+z**2))
    return rho,phi*180/np.pi,180-(theta*180/np.pi)
efficacite_lum=122 #lum/sr
Area_rx=1.30e-05 #m²
x=np.linspace(-3,3,100)
y=np.linspace(-3,3,100)
z_=[]
z_pos=-4.5
FOV=60
H=(len(x),len(y))

#h=np.zeros(H)
h=[]
h_dBm=[]
for i in x:
    for j in y:
        RX_pos=np.array([i, j, z_pos])
        
        
        RX_pos_spher=get_spherical(RX_pos[0],RX_pos[1],RX_pos[2])
        #here=180-RX_pos_spher[2]
        
        if(RX_pos_spher[2]<=FOV):
            for_phi=int(round(RX_pos_spher[1])/30.)
            for_theta=int(round(RX_pos_spher[2]))
            #Puissance_lu=np.interp((RX_pos_spher[1])/30.,phi*180/np.pi,rho[:,for_theta])
            #print( 'phi  '+str(for_phi)+ 'theta  ' + str(for_theta))
            Puissance_lu=rho[for_phi][for_theta]
            Puissance_W_sr=Puissance_lu/efficacite_lum
            P_rx_W=Puissance_W_sr*Area_rx/(RX_pos_spher[0]**2)
            h.append(P_rx_W)
            P_rx_dBm=10*np.log10(P_rx_W/0.001)
            h_dBm.append(P_rx_dBm)
            #TEST00=H[ii, jj]
            #TEST01=((m+1)*Adet*(cosphi**(m)))/(2*np.pi*np.square(D1))

        else:
            h.append(0)
            h_dBm.append(np.log10(0/0.001))

       
X,Y=np.meshgrid(x,y)
#Power in Watts
h_array=np.asarray(h)  
h_matrix=h_array.reshape(len(x),len(y))
#Power in dBm
h_array_dBm=np.asarray(h_dBm)   
h_matrix_dBm=h_array_dBm.reshape(len(x),len(y))

#h_matrix_total_dBm=10*np.log10((h_matrix_total)/0.001)

ax = fig.add_subplot(111, projection='3d')
plt.figure(figsize=(16,6))
plt.subplot(1,2,1,projection='3d')
ax=plt.gca(projection='3d')
ax.plot_surface(X,Y, h_matrix_dBm, cmap='jet')
plt.title('Power in dBm considering reflections') 
plt.xlabel('x (m)')
plt.ylabel('y (m)')
plt.subplot(1,2,2)
vec=np.linspace(np.min(h_matrix_dBm), np.max(h_matrix_dBm),10)
#vec=[np.max(rho)*3/4]
#vec=np.array([np.max(rho)/2])
cont=plt.contour(X, Y, h_matrix_dBm ,vec,cmap='jet')
plt.clabel(cont)
plt.xlabel('x (m)')
plt.ylabel('y (m)')
plt.title('Level curves dBm') 
#plt.axis('equal')
plt.show()


#%%

ax = fig.add_subplot(111, projection='3d')
plt.figure(figsize=(16,6))
plt.subplot(1,2,1,projection='3d')
ax=plt.gca(projection='3d')
# Create the mesh in polar coordinates and compute corresponding Z.
#r=np.linspace(0,np.pi ,181) 
#r=np.linspace(0,np.pi/2 ,91) 
r=np.linspace(0,2*np.pi/3 ,61)
p=np.linspace(0,np.pi*2,13) 
R, P = np.meshgrid(r, p)
Z=[1931.094,1932.181,1930.732,1934.353,1933.629,1940.871,1940.871,1945.216,1947.027,1955.717,1963.684,1970.201,1981.065,1991.565,1995.911,2009.308,2020.534,2034.656,2042.984,2053.485,2065.072,2075.211,2088.609,2095.851,2103.817,2115.767,2125.181,2134.234,2142.925,2147.632,2152.339,2159.219,2164.289,2172.255,2177.686,2183.118,2192.895,2198.326,2207.379,2213.172,2220.777,2224.398,2232.726,2238.52,2242.141,2250.831,2257.711,2264.591,2274.006,2291.387,2303.698,2319.269,2337.012,2348.961,2368.152,2389.879,2411.967,2436.228,2473.162,2511.907,2560.791,2608.227,2658.559,2697.304,2710.34,2686.079,2642.988,2598.45,2562.964,2540.876,2516.614,2493.802,2444.918,2360.91,2188.912,1922.404,1631.273,1329.642,1051.909,779.969,560.535,390.347,270.129,165.119,83.646,32.951,17.743,12.311,7.242,3.621,1.086,0.724,0,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.724,0.724,1.811,1.448,1.448,1.448,2.173,2.535,2.535,2.173,2.535,2.535,2.535,2.173,2.535,2.173,2.535,1.811,2.173,3.259,2.535,3.259,3.621,3.983,3.621,3.983,3.983,3.983,5.069,5.069,5.069,6.518,6.88,6.518,6.88,7.966,8.69,9.053,9.053,9.415,11.225,12.311,11.587,13.398,13.398,14.122,14.484,15.208,16.295,16.657,16.657,17.743,17.381,17.743,18.467,18.829,18.467,18.105,18.829,18.829,20.278,19.916,20.278,21.002,20.64,1931.094,1947.751,1958.614,1966.58,1974.547,1982.151,1992.652,2003.515,2014.378,2025.603,2037.552,2047.329,2057.106,2070.142,2081.729,2093.316,2103.093,2119.388,2133.51,2150.167,2163.926,2180.221,2197.24,2213.897,2228.381,2243.951,2262.418,2276.903,2293.559,2310.578,2319.631,2335.925,2343.167,2356.565,2367.066,2376.843,2389.516,2399.293,2410.156,2425.003,2433.693,2446.367,2457.23,2464.11,2472.076,2473.886,2479.318,2476.059,2481.853,2489.095,2498.509,2495.613,2495.613,2491.629,2491.629,2488.008,2474.611,2463.023,2450.35,2424.278,2396.759,2358.738,2304.06,2234.174,2153.788,2064.71,1971.288,1849.983,1715.281,1578.768,1437.91,1276.05,1088.481,845.51,630.059,467.837,320.823,226.676,160.049,112.976,82.197,57.936,43.09,29.692,20.278,11.587,4.707,2.173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.086,0,1.086,0,1.086,1.448,2.173,2.535,2.535,2.535,4.345,4.345,4.707,6.156,5.432,7.242,8.328,7.966,9.053,10.501,10.501,11.587,13.036,14.122,14.122,14.846,15.57,15.57,16.295,18.105,17.381,18.105,17.743,17.743,18.467,18.467,18.467,19.554,19.191,19.916,19.916,21.002,1931.094,1949.561,1964.408,1974.185,1984.323,1996.273,2007.136,2017.275,2027.414,2036.466,2043.346,2049.14,2057.83,2069.056,2075.935,2081.005,2089.333,2098.386,2103.817,2111.784,2118.664,2122.285,2124.457,2124.095,2132.786,2133.872,2135.682,2138.217,2139.303,2136.407,2129.527,2122.647,2115.767,2107.438,2092.592,2077.022,2060.003,2036.466,2011.119,1979.254,1939.061,1900.678,1856.139,1802.91,1748.957,1685.951,1614.979,1542.558,1456.74,1366.214,1261.204,1128.312,976.953,859.632,781.056,724.568,672.787,620.282,575.381,533.377,491.736,452.266,414.246,378.76,341.101,281.354,248.04,221.245,195.898,170.913,145.203,120.218,95.233,75.317,59.023,45.625,35.124,28.244,21.364,14.122,8.69,5.069,2.535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.724,1.086,1.811,2.173,2.897,3.259,3.621,5.069,6.156,6.88,7.604,9.053,9.777,10.501,11.587,11.225,12.674,13.76,13.76,15.208,15.933,16.295,16.657,16.657,17.743,17.743,18.829,18.467,19.191,18.829,19.554,19.554,19.916,19.554,20.278,1931.094,1951.01,1962.959,1975.633,1989.393,1996.635,2009.308,2017.637,2024.879,2033.932,2039.725,2046.243,2049.14,2053.847,2061.451,2064.71,2066.883,2067.245,2068.693,2061.451,2062.538,2060.003,2058.554,2057.468,2061.451,2063.262,2049.14,2025.603,1998.808,1962.235,1937.612,1905.385,1870.261,1842.017,1801.461,1759.095,1714.195,1662.414,1603.753,1546.541,1479.19,1410.028,1335.073,1240.202,1139.175,1026.561,936.76,871.944,816.542,772.003,731.81,689.444,650.337,609.419,574.657,541.706,507.306,475.803,446.473,417.142,363.189,312.495,286.061,261.438,237.177,211.83,189.018,166.567,141.582,115.873,93.06,73.145,51.056,39.831,29.33,22.812,16.657,10.139,6.156,3.259,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0,1.086,1.448,2.173,3.983,3.259,4.707,5.069,5.794,5.794,7.966,8.328,9.777,10.863,11.225,12.311,12.674,13.398,14.484,14.846,16.295,15.933,16.657,16.657,18.105,18.105,18.105,18.105,20.278,19.191,19.554,19.916,20.64,19.554,19.916,1931.094,1941.957,1954.993,1964.77,1977.443,1986.496,1996.997,2006.412,2016.913,2026.689,2037.915,2046.605,2056.382,2063.262,2070.504,2079.194,2085.712,2093.678,2098.386,2102.007,2109.611,2111.059,2118.301,2118.664,2128.078,2126.63,2128.44,2128.078,2129.165,2124.457,2119.026,2112.146,2102.731,2087.161,2070.866,2052.761,2032.121,2003.515,1974.909,1940.147,1904.299,1865.554,1819.567,1764.889,1704.056,1637.429,1565.008,1477.742,1386.492,1270.619,1143.521,997.231,849.855,769.468,710.446,655.044,604.712,559.449,514.91,472.182,433.075,392.519,357.758,305.977,258.541,229.573,203.864,177.792,152.807,126.736,101.027,80.025,63.73,51.056,39.107,30.779,24.623,17.381,10.863,7.604,3.983,1.448,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.724,1.086,1.086,1.811,2.173,2.535,3.259,3.621,5.432,4.345,5.794,6.518,7.604,9.053,9.777,10.863,11.587,12.674,13.76,13.76,14.484,15.208,15.933,16.295,16.295,17.381,17.381,18.467,18.829,18.829,19.554,18.829,19.916,19.916,20.278,19.554,20.278,19.916,1931.094,1921.318,1930.732,1939.785,1952.096,1960.063,1968.029,1980.702,1985.772,2001.342,2011.119,2025.241,2031.759,2045.519,2060.003,2074.125,2088.609,2099.834,2112.508,2126.268,2140.39,2150.529,2165.737,2177.686,2196.154,2208.827,2223.673,2233.812,2249.021,2259.884,2272.919,2286.317,2297.905,2310.94,2323.976,2334.839,2343.892,2359.1,2371.411,2379.016,2388.068,2394.586,2397.121,2401.104,2401.828,2398.569,2396.034,2395.31,2397.483,2396.034,2394.224,2389.516,2383.723,2372.136,2359.824,2342.081,2322.165,2293.559,2254.09,2202.309,2134.234,2058.192,1972.736,1880.038,1754.75,1626.928,1484.259,1339.056,1175.748,983.109,779.245,544.965,394.692,265.783,184.672,128.184,88.353,63.73,45.987,34.4,23.899,16.295,10.139,5.794,2.173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.724,0,1.448,1.811,1.811,2.535,2.173,2.897,3.259,3.259,3.983,3.983,4.707,4.707,5.794,6.156,6.156,6.88,7.966,7.966,9.053,9.777,10.863,11.949,12.674,12.311,13.76,14.484,15.208,15.933,16.295,16.295,17.381,18.105,18.105,19.191,19.191,19.554,19.916,19.191,19.916,19.916,20.64,20.64,20.278,21.364,21.364,1931.094,1936.164,1935.439,1936.526,1936.888,1937.25,1937.974,1942.319,1944.492,1948.113,1955.355,1964.77,1970.563,1979.254,1987.944,1996.635,2008.584,2020.172,2032.121,2041.174,2049.14,2060.003,2069.78,2077.746,2087.161,2095.851,2107.438,2113.232,2119.75,2127.354,2128.803,2137.493,2141.476,2148.356,2154.874,2162.84,2175.514,2183.118,2190.722,2199.412,2199.05,2200.499,2203.034,2206.292,2219.69,2234.174,2244.313,2247.934,2255.176,2263.505,2271.471,2280.886,2289.938,2307.681,2322.165,2346.426,2365.256,2394.586,2430.434,2460.489,2509.735,2554.635,2599.174,2622.349,2614.02,2581.793,2549.204,2525.305,2502.855,2485.112,2470.99,2431.883,2373.584,2242.865,1999.532,1703.694,1409.666,1120.346,857.097,601.815,422.574,292.941,195.536,110.441,47.435,23.537,17.019,11.587,9.053,5.069,4.707,3.621,2.897,3.259,1.448,2.173,1.811,1.811,1.448,1.811,1.086,0.724,1.448,0.362,1.086,0,0.362,0.362,0,0.362,0.724,0.362,0.362,0.724,1.086,1.086,1.448,0.724,1.086,2.173,1.811,1.811,2.173,2.173,2.535,2.173,2.173,2.173,2.173,1.811,1.448,1.448,1.811,1.811,1.448,2.535,0.724,2.173,1.811,1.811,2.897,3.259,2.897,3.259,3.621,4.345,4.707,4.707,5.069,5.432,6.518,6.156,6.518,7.966,7.604,9.415,7.966,9.777,9.415,11.587,11.225,11.587,12.674,12.674,13.398,13.76,15.57,15.933,16.657,16.295,17.019,18.105,18.467,19.191,20.278,19.916,19.554,20.278,19.916,21.002,20.64,1931.094,1931.456,1924.576,1912.265,1905.385,1896.695,1891.263,1882.21,1877.503,1870.623,1864.83,1859.398,1852.518,1847.086,1837.672,1832.24,1826.809,1821.015,1814.859,1809.428,1802.91,1797.116,1790.598,1786.253,1782.27,1774.304,1767.062,1759.458,1751.491,1741.352,1733.748,1720.713,1708.401,1697.176,1684.502,1672.915,1657.345,1637.791,1623.307,1609.547,1594.339,1576.234,1562.836,1547.627,1524.815,1502.365,1477.742,1454.205,1424.875,1399.889,1369.111,1333.625,1302.484,1267.722,1226.804,1184.438,1139.175,1086.308,1033.441,977.678,917.569,853.838,782.866,705.376,630.783,562.708,502.599,445.749,403.02,365,332.41,302.356,272.301,239.712,206.761,177.792,139.772,115.149,97.044,79.663,59.747,43.452,31.503,21.364,14.484,10.501,6.156,3.259,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0,0,0.362,0,0.724,0.724,0.724,0.724,1.448,0.724,1.086,1.086,1.448,0.724,1.086,1.811,1.448,1.448,1.811,1.811,1.811,2.173,3.259,3.259,3.259,3.621,3.621,4.707,4.707,4.345,5.069,5.432,5.794,6.156,6.518,7.242,8.328,7.604,8.69,9.053,9.415,9.777,10.501,9.777,11.587,11.949,13.036,13.036,14.846,14.484,15.57,15.208,16.295,17.381,18.105,18.105,18.829,19.554,20.278,19.916,19.916,21.002,20.64,21.002,21.002,21.002,1931.094,1920.955,1907.92,1894.522,1878.227,1860.484,1845.276,1826.809,1807.255,1790.598,1769.959,1749.319,1728.317,1706.228,1682.692,1658.431,1634.894,1606.288,1582.027,1555.956,1525.177,1495.485,1465.43,1432.479,1396.631,1359.696,1323.124,1286.189,1244.547,1203.63,1162.712,1117.449,1073.997,1026.924,978.764,927.707,880.272,837.544,800.971,766.572,737.603,712.98,691.616,673.511,653.958,638.025,622.817,608.695,592.038,577.554,565.242,550.396,536.274,524.325,510.927,494.632,480.148,464.578,451.18,434.523,420.401,403.383,389.623,374.776,358.482,336.031,305.977,288.596,271.939,255.645,238.988,222.331,203.864,185.759,162.584,141.22,98.492,75.317,49.97,34.038,19.191,8.328,2.173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.724,1.086,1.086,1.448,2.173,1.811,2.897,3.621,3.621,4.345,5.432,5.794,5.794,6.88,7.604,8.328,8.328,8.69,9.777,10.863,10.863,11.587,12.674,13.76,13.398,14.484,14.846,15.57,15.57,17.743,17.743,18.105,18.467,18.829,19.191,20.278,19.191,20.278,20.278,19.916,19.554,20.64,20.278,1931.094,1918.059,1902.488,1882.572,1862.657,1844.552,1822.101,1801.461,1778.287,1752.578,1727.23,1702.245,1676.174,1645.395,1614.616,1582.027,1551.248,1517.935,1480.276,1444.428,1406.045,1360.782,1317.33,1274.24,1226.804,1179.007,1131.933,1085.222,1035.252,983.833,934.949,886.428,840.079,802.42,770.193,743.035,717.688,696.324,678.219,662.286,646.354,633.318,622.455,611.23,600.729,593.487,585.52,576.468,567.777,555.104,543.878,533.74,522.876,511.289,500.426,488.477,476.889,465.664,453.353,441.403,429.816,416.056,399.399,368.983,351.24,338.928,323.72,308.149,295.114,280.63,265.783,249.851,235.005,213.641,188.293,120.942,97.044,43.814,23.537,2.897,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.362,2.535,2.897,3.259,3.621,4.707,5.069,5.432,6.156,6.88,7.242,8.328,8.69,9.415,10.501,10.501,11.949,11.587,12.311,12.674,13.398,14.846,14.846,14.846,16.657,17.019,18.105,18.105,18.467,19.191,19.191,19.916,19.916,19.916,19.916,21.002,19.916,19.916,1931.094,1912.989,1898.505,1880.038,1866.278,1848.535,1831.516,1813.773,1796.754,1774.666,1753.302,1738.456,1714.195,1692.106,1668.932,1647.206,1621.496,1596.511,1568.629,1543.644,1515.4,1489.691,1461.809,1430.668,1395.906,1361.144,1324.21,1286.913,1248.53,1208.699,1169.23,1125.053,1081.239,1037.062,992.162,944.726,899.101,857.459,819.801,783.228,754.26,729.637,705.738,683.65,666.993,650.337,632.232,617.385,605.074,591.314,577.916,563.432,550.396,535.912,525.049,511.651,496.443,481.959,468.199,452.266,439.231,424.022,408.452,394.33,380.57,365.362,350.516,320.461,297.649,282.44,266.146,249.851,233.194,216.175,197.346,178.879,153.169,133.978,89.801,67.713,40.918,25.709,14.484,6.88,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,1.086,0.362,1.448,1.086,1.811,2.897,3.621,3.621,4.707,5.069,5.794,5.794,6.88,7.242,8.328,8.69,9.415,9.777,10.863,11.587,11.587,13.398,13.398,13.398,14.122,14.846,15.208,16.295,16.295,17.743,18.467,18.467,19.554,19.554,19.191,19.916,20.278,19.916,20.64,19.916,19.916,1931.094,1903.212,1895.608,1887.28,1878.589,1872.796,1864.105,1859.036,1851.794,1848.535,1842.741,1836.585,1832.964,1825.722,1818.118,1813.411,1807.617,1803.634,1798.927,1794.944,1788.426,1783.719,1776.839,1776.114,1772.855,1769.959,1764.527,1755.112,1754.026,1747.146,1742.077,1735.921,1729.041,1722.885,1712.384,1701.883,1689.934,1679.433,1663.138,1651.913,1636.705,1620.41,1604.84,1588.545,1570.802,1554.507,1538.213,1518.659,1499.468,1476.293,1449.497,1423.426,1395.906,1366.214,1331.09,1298.501,1261.566,1221.735,1182.628,1136.279,1084.498,1033.441,978.402,919.017,855.649,781.056,709.722,636.577,569.588,509.479,450.818,405.917,369.345,338.204,306.701,275.56,241.885,208.933,179.603,141.944,116.235,98.492,81.473,59.023,42.366,29.33,20.64,14.122,8.69,4.707,1.448,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.362,1.086,0.362,2.173,2.173,2.535,3.259,2.897,3.621,3.983,3.983,4.707,5.069,5.794,5.794,6.518,6.518,7.604,7.966,7.966,8.69,9.777,9.777,10.139,10.863,11.949,11.949,13.398,13.76,14.122,14.846,15.933,16.295,16.657,17.019,18.105,18.467,19.191,19.554,19.191,19.554,19.916,19.916,21.002,20.64,21.364,1931.094,1932.181,1930.732,1934.353,1933.629,1940.871,1940.871,1945.216,1947.027,1955.717,1963.684,1970.201,1981.065,1991.565,1995.911,2009.308,2020.534,2034.656,2042.984,2053.485,2065.072,2075.211,2088.609,2095.851,2103.817,2115.767,2125.181,2134.234,2142.925,2147.632,2152.339,2159.219,2164.289,2172.255,2177.686,2183.118,2192.895,2198.326,2207.379,2213.172,2220.777,2224.398,2232.726,2238.52,2242.141,2250.831,2257.711,2264.591,2274.006,2291.387,2303.698,2319.269,2337.012,2348.961,2368.152,2389.879,2411.967,2436.228,2473.162,2511.907,2560.791,2608.227,2658.559,2697.304,2710.34,2686.079,2642.988,2598.45,2562.964,2540.876,2516.614,2493.802,2444.918,2360.91,2188.912,1922.404,1631.273,1329.642,1051.909,779.969,560.535,390.347,270.129,165.119,83.646,32.951,17.743,12.311,7.242,3.621,1.086,0.724,0,0.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.362,0.724,0.724,1.811,1.448,1.448,1.448,2.173,2.535,2.535,2.173,2.535,2.535,2.535,2.173,2.535,2.173,2.535,1.811,2.173,3.259,2.535,3.259,3.621,3.983,3.621,3.983,3.983,3.983,5.069,5.069,5.069,6.518,6.88,6.518,6.88,7.966,8.69,9.053,9.053,9.415,11.225,12.311,11.587,13.398,13.398,14.122,14.484,15.208,16.295,16.657,16.657,17.743,17.381,17.743,18.467,18.829,18.467,18.105,18.829,18.829,20.278,19.916,20.278,21.002,20.64]
rho=Z1.reshape(13,181)
rho_60 = rho[:, 0:61]
rho_60_per_surf = rho[:, 0:61]/16
# Express the mesh in the cartesian system.
X, Y = R*np.cos(P), R*np.sin(P)
# Plot the surface.
ax.plot_surface(X,Y, rho_60_per_surf, cmap='jet')

# Tweak the limits and add latex math labels.
ax.set_zlim(np.min(rho_60_per_surf), np.max(rho_60_per_surf))
ax.set_xlabel('x (m)')
ax.set_ylabel('y (m)')
ax.set_zlabel('Cd/m²')
plt.subplot(1,2,2)
vec=np.linspace(np.min(rho_60_per_surf), np.max(rho_60_per_surf),10)
#vec=[np.max(rho)*3/4]
#vec=np.array([np.max(rho)/2])
cont=plt.contour(X, Y, rho_60_per_surf,vec,cmap='jet')
plt.clabel(cont)
plt.xlabel('x (m)')
plt.ylabel('y (m)')
plt.title('Level curves Cd/m²') 
#plt.axis('equal')
plt.show()

